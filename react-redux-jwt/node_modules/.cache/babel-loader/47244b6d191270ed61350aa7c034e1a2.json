{"ast":null,"code":"import { REGISTER_SUCCESS, REGISTER_FAIL, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, SET_MESSAGE } from \"./types\";\nimport AuthService from \"../services/auth.service\";\nimport CouponService from \"../services/couponService\";\nexport const register = (firstname, lastName, email, password, address, contactNumber) => dispatch => {\n  return AuthService.register(firstname, lastName, email, password, address, contactNumber).then(response => {\n    dispatch({\n      type: REGISTER_SUCCESS\n    });\n    dispatch({\n      type: SET_MESSAGE,\n      payload: response.data.message\n    });\n    return Promise.resolve();\n  }, error => {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    dispatch({\n      type: REGISTER_FAIL\n    });\n    dispatch({\n      type: SET_MESSAGE,\n      payload: message\n    });\n    return Promise.reject();\n  });\n};\nexport const addCoupon = (couponName, couponValidity, description, couponCode, couponCategory, couponPrice, couponQuantity, couponBrand) => dispatch => {\n  return CouponService.addCoupon(couponName, couponValidity, description, couponCode, couponCategory, couponPrice, couponQuantity, couponBrand).then(response => {\n    dispatch({\n      type: REGISTER_SUCCESS\n    });\n    dispatch({\n      type: SET_MESSAGE,\n      payload: response.data.message\n    });\n    return Promise.resolve();\n  }, error => {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    dispatch({\n      type: REGISTER_FAIL\n    });\n    dispatch({\n      type: SET_MESSAGE,\n      payload: message\n    });\n    return Promise.reject();\n  });\n};\nexport const updateCoupon = (couponName, couponValidity, description, couponCode, couponCategory, couponPrice, couponQuantity, couponBrand) => dispatch => {\n  return CouponService.updateCoupon(couponName, couponValidity, description, couponCode, couponCategory, couponPrice, couponQuantity, couponBrand).then(response => {\n    dispatch({\n      type: REGISTER_SUCCESS\n    });\n    dispatch({\n      type: SET_MESSAGE,\n      payload: response.data.message\n    });\n    return Promise.resolve();\n  }, error => {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    dispatch({\n      type: REGISTER_FAIL\n    });\n    dispatch({\n      type: SET_MESSAGE,\n      payload: message\n    });\n    return Promise.reject();\n  });\n};\nexport const login = (username, password) => dispatch => {\n  return AuthService.login(username, password).then(data => {\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: {\n        user: data\n      }\n    });\n    return Promise.resolve();\n  }, error => {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    dispatch({\n      type: LOGIN_FAIL\n    });\n    dispatch({\n      type: SET_MESSAGE,\n      payload: message\n    });\n    return Promise.reject();\n  });\n};\nexport const logout = () => dispatch => {\n  AuthService.logout();\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"names":["REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SET_MESSAGE","AuthService","CouponService","register","firstname","lastName","email","password","address","contactNumber","dispatch","then","response","type","payload","data","message","Promise","resolve","error","toString","reject","addCoupon","couponName","couponValidity","description","couponCode","couponCategory","couponPrice","couponQuantity","couponBrand","updateCoupon","login","username","user","logout"],"sources":["D:/couponanddeals/react-redux-jwt/src/actions/auth.js"],"sourcesContent":["import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  SET_MESSAGE,\n} from \"./types\";\n\nimport AuthService from \"../services/auth.service\";\nimport CouponService from \"../services/couponService\";\n\n\nexport const register = (firstname, lastName, email,password,address,contactNumber) => (dispatch) => {\n  return AuthService.register(firstname, lastName, email,password,address,contactNumber).then(\n    (response) => {\n      dispatch({\n        type: REGISTER_SUCCESS,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: response.data.message,\n      });\n\n      return Promise.resolve();\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n\n      dispatch({\n        type: REGISTER_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const addCoupon = (couponName, couponValidity,description,couponCode,couponCategory,couponPrice,couponQuantity,couponBrand) => (dispatch) => {\n  return CouponService.addCoupon(couponName, couponValidity,description,couponCode,couponCategory,couponPrice,couponQuantity,couponBrand).then(\n    (response) => {\n      dispatch({\n        type: REGISTER_SUCCESS,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: response.data.message,\n      });\n\n      return Promise.resolve();\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n\n      dispatch({\n        type: REGISTER_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const updateCoupon = (couponName, couponValidity,description,couponCode,couponCategory,couponPrice,couponQuantity,couponBrand) => (dispatch) => {\n  return CouponService.updateCoupon(couponName, couponValidity,description,couponCode,couponCategory,couponPrice,couponQuantity,couponBrand).then(\n    (response) => {\n      dispatch({\n        type: REGISTER_SUCCESS,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: response.data.message,\n      });\n\n      return Promise.resolve();\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n\n      dispatch({\n        type: REGISTER_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const login = (username, password) => (dispatch) => {\n  return AuthService.login(username, password).then(\n    (data) => {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: { user: data },\n      });\n\n      return Promise.resolve();\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n\n      dispatch({\n        type: LOGIN_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const logout = () => (dispatch) => {\n  AuthService.logout();\n\n  dispatch({\n    type: LOGOUT,\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}